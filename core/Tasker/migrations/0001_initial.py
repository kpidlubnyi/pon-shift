# Generated by Django 5.2.5 on 2025-09-04 17:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('service_id', models.CharField(max_length=32)),
                ('exception_type', models.IntegerField(choices=[(0, 'Zero'), (1, 'One')])),
            ],
            options={
                'db_table': 'Tasker_CalendarDates',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('agency_id', models.IntegerField(choices=[(0, 'Agency'), (1, 'Mkuran')])),
                ('route_short_name', models.CharField(max_length=8)),
                ('route_long_name', models.CharField(max_length=64)),
                ('route_type', models.IntegerField(choices=[(0, 'Tram'), (1, 'Metro'), (2, 'Train'), (3, 'Bus')])),
                ('route_color', models.CharField(max_length=6)),
                ('route_text_color', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'Tasker_Routes',
            },
        ),
        migrations.CreateModel(
            name='Shape',
            fields=[
                ('shape_id', models.CharField(max_length=17, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Tasker_Shapes',
            },
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('stop_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('stop_name', models.CharField(max_length=32)),
                ('stop_code', models.CharField(max_length=8, null=True)),
                ('platform_code', models.CharField(max_length=8, null=True)),
                ('stop_lat', models.FloatField()),
                ('stop_lon', models.FloatField()),
                ('location_type', models.IntegerField(choices=[(0, 'Bus Tram Train'), (1, 'Metro'), (2, 'Metro Entrance')])),
                ('parent_station', models.CharField(max_length=8, null=True)),
                ('wheelchair_boarding', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('stop_name_stem', models.CharField(max_length=32, null=True)),
                ('town_name', models.CharField(max_length=32, null=True)),
                ('street_name', models.CharField(max_length=32, null=True)),
            ],
            options={
                'db_table': 'Tasker_Stops',
            },
        ),
        migrations.CreateModel(
            name='ShapeSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape_pt_sequence', models.IntegerField()),
                ('shape_pt_lat', models.DecimalField(decimal_places=12, max_digits=14)),
                ('shape_pt_lon', models.DecimalField(decimal_places=12, max_digits=14)),
                ('shape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.shape')),
            ],
            options={
                'db_table': 'Tasker_ShapeSequences',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('trip_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('service_id', models.CharField(max_length=32)),
                ('trip_short_name', models.CharField(max_length=32, null=True)),
                ('trip_headsign', models.CharField(max_length=32)),
                ('direction_id', models.IntegerField(choices=[(0, 'Tuda'), (1, 'Suda')])),
                ('wheelchair_accessible', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('hidden_block_id', models.IntegerField(blank=True, null=True)),
                ('brigade', models.CharField(max_length=4)),
                ('fleet_type', models.CharField(max_length=16)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.route')),
                ('shape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.shape')),
            ],
            options={
                'db_table': 'Tasker_Trips',
                'unique_together': {('trip_id', 'route_id')},
            },
        ),
        migrations.CreateModel(
            name='Frequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(max_length=8)),
                ('end_time', models.CharField(max_length=8)),
                ('headway_secs', models.IntegerField()),
                ('exact_times', models.IntegerField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.trip')),
            ],
            options={
                'db_table': 'Tasker_Frequencies',
            },
        ),
        migrations.CreateModel(
            name='StopTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_sequence', models.IntegerField()),
                ('arrival_time', models.CharField(max_length=8)),
                ('departure_time', models.CharField(max_length=8)),
                ('pickup_type', models.IntegerField(choices=[(0, 'Zwykly'), (3, 'Na Zadanie')])),
                ('drop_off_type', models.IntegerField(choices=[(0, 'Zwykly'), (3, 'Na Zadanie')])),
                ('stop_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.stop')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tasker.trip')),
            ],
            options={
                'db_table': 'Tasker_StopTimes',
                'unique_together': {('trip', 'stop_sequence')},
            },
        ),
    ]
